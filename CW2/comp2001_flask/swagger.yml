openapi: 3.0.0
info:
  title: "RP Flask REST API"
  description: "A Trail Microservice API"
  version: "1.0.0"
servers:
  - url: "/api"

components:
  schemas:
    Trail:
      type: "object"
      required:
        - TrailName
        - TrailSummary
        - TrailDescription
        - Difficulty
        - Location
        - Length
        - ElevationGain
        - RouteType
        - OwnerID
        - Pt1_Lat
        - Pt1_Long
        - Pt1_Desc
        - Pt2_Lat
        - Pt2_Long
        - Pt2_Desc
        - Pt3_Lat
        - Pt3_Long
        - Pt3_Desc
        - Pt4_Lat
        - Pt4_Long
        - Pt4_Desc
        - Pt5_Lat
        - Pt5_Long
        - Pt5_Desc
      properties:
        TrailId:
          type: "integer"
          description: "Unique identifier for the trail."
          readOnly: true
        TrailName:
          type: "string"
          description: "The name of the trail."
        TrailSummary:
          type: "string"
          description: "A brief summary of the trail."
        TrailDescription:
          type: "string"
          description: "Detailed description of the trail."
        Difficulty:
          type: "string"
          description: "Difficulty level of the trail (e.g., Easy, Moderate, Hard)."
        Location:
          type: "string"
          description: "Location of the trail (e.g., Sunset Park, Riverfront Park)."
        Length:
          type: "number"
          format: "float"
          description: "Length of the trail in kilometers."
        ElevationGain:
          type: "number"
          format: "float"
          description: "Total elevation gain in meters."
        RouteType:
          type: "string"
          description: "Route type of the trail (e.g., Loop, Out and Back)."
        OwnerID:
          type: "integer"
          description: "ID of the trail owner."
        Pt1_Lat:
          type: "number"
          format: "float"
          description: "Latitude of the first point of the trail."
        Pt1_Long:
          type: "number"
          format: "float"
          description: "Longitude of the first point of the trail."
        Pt1_Desc:
          type: "string"
          description: "Description of the first point of the trail."
        Pt2_Lat:
          type: "number"
          format: "float"
          description: "Latitude of the second point of the trail."
        Pt2_Long:
          type: "number"
          format: "float"
          description: "Longitude of the second point of the trail."
        Pt2_Desc:
          type: "string"
          description: "Description of the second point of the trail."
        Pt3_Lat:
          type: "number"
          format: "float"
          description: "Latitude of the third point of the trail."
        Pt3_Long:
          type: "number"
          format: "float"
          description: "Longitude of the third point of the trail."
        Pt3_Desc:
          type: "string"
          description: "Description of the third point of the trail."
        Pt4_Lat:
          type: "number"
          format: "float"
          description: "Latitude of the fourth point of the trail."
        Pt4_Long:
          type: "number"
          format: "float"
          description: "Longitude of the fourth point of the trail."
        Pt4_Desc:
          type: "string"
          description: "Description of the fourth point of the trail."
        Pt5_Lat:
          type: "number"
          format: "float"
          description: "Latitude of the fifth point of the trail."
        Pt5_Long:
          type: "number"
          format: "float"
          description: "Longitude of the fifth point of the trail."
        Pt5_Desc:
          type: "string"
          description: "Description of the fifth point of the trail."

    Features:
      type: "object"
      required:
        - Feature
      properties: 
        FeaturesId:
          type: "integer"
          description: "Unique identifier for features"
          readOnly: true 
        Feature:
          type: "string"
          description: "Feature of a trail"

    TrailFeature:
      type: "object"
      required:
        - Trail Features
      properties:
        TrailId: 
          type: "integer"
          description: "Unique identifier for trail"
        FeaturesId:
          type: "integer"
          description: "Unique identifier for features"

  

  parameters:
    TrailId:
      name: "TrailId"
      description: "ID of the trail to get"
      in: path
      required: true
      schema:
        type: "integer"

    FeaturesId:
      name: "FeaturesId"
      description: "ID of the feature to get"
      in: path
      required: true
      schema:
        type: "integer" 

  

paths: 
  /trails:
    get:
      operationId: "trails.read_all"
      tags:
        - "Trails"
      summary: "Read the list of trails"
      parameters:
        - name: auth
          in: query
          description: "JWT token for authorization"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Successfully read trail list"
    post:
      operationId: "trails.create"
      tags:
        - "Trails"
      summary: "Create a Trail"
      parameters:
        - name: auth
          in: query
          description: "JWT token for authorization"
          required: true
          schema:
            type: string
      requestBody:
        description: "Trail to create"
        required: true
        content:
          application/json:
            schema:
              x-body-name: "trail"
              $ref: "#/components/schemas/Trail"
      responses:
        "201":
          description: "Successfully created Trail"
  
  /trails/{TrailId}:
    get:
      operationId: "trails.read_one"
      tags:
        - "Trails"
      summary: "Read one Trail"
      parameters:
        - $ref: "#/components/parameters/TrailId"
        - name: auth
          in: query
          description: "JWT token for authorization"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Successfully read Trail"
    put: 
      operationId: "trails.update"
      tags:
        - "Trails"
      summary: "Update a trail"
      parameters:
        - $ref: "#/components/parameters/TrailId"
        - name: auth
          in: query
          description: "JWT token for authorization"
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: "trail"
              $ref: "#/components/schemas/Trail"
      responses:
        "200":
          description: "Successfully updated Trail"
    delete:
      operationId: "trails.delete"
      tags:
        - "Trails"
      summary: "Delete a trail"
      parameters: 
        - $ref: "#/components/parameters/TrailId"
        - name: auth
          in: query
          description: "JWT token for authorization"
          required: true
          schema:
            type: string
      responses:
        "204":
          description: "Successfully deleted a Trail"

  /features:
    get:
      operationId: "features.read_all"
      tags:
        - "Features"
      summary: "Read the list of features"
      responses:
        "200":
          description: "Successfully read features list"
    post: 
      operationId: "features.create"
      tags:
        - "Features"
      summary: "Create a Feature"
      requestBody:
        description: "Feature to create"
        required: true
        content:
          application/json:
            schema:
              x-body-name: "features"
              $ref: "#/components/schemas/Features"
      responses:
        "201":
          description: "Successfully created Feature"

  /features/{FeaturesId}:
    get:
      operationId: "features.read_one"
      tags: 
        - "Features"
      summary: "Read one feature"
      parameters:
        - $ref: "#/components/parameters/FeaturesId"
      responses: 
        "200":
          description: "Successfully read a feature"
    delete:
      operationId: "features.delete"
      tags:
        - "Features"
      summary: "Delete a feature"
      parameters: 
        - $ref: "#/components/parameters/FeaturesId"
      responses: 
        "200":
          description: "Successfully delete a feature"
    put: 
      operationId: "features.update"
      tags: 
        - "Features"
      summary: "Update a feature"
      parameters: 
        - $ref: "#/components/parameters/FeaturesId"
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: "features"
              $ref: "#/components/schemas/Features"
      responses:
        "200":
          description: "Successfully updated Feature"

  /trails/{TrailId}/features:
    get:
      operationId: "trail_features.read_all"
      tags:
        - "Trail Features"
      summary: "Read all features for a specific trail"
      parameters:
        - $ref: "#/components/parameters/TrailId"
      responses:
        "200":
          description: "Succsesfully read all features for the trail"
  /trails/{TrailId}/features/{FeaturesId}:
    post:
      operationId: "trail_features.create"
      tags:
        - "Trail Features"
      summary: "Add a feature to a trail"
      parameters:
        - $ref: "#/components/parameters/TrailId"
        - $ref: "#/components/parameters/FeaturesId"
      responses:
        "201":
          description: "Successfully added a feature to a trail"
    delete:
      operationId: "trail_features.delete"
      tags:
        - "Trail Features"
      summary: "Delete a feature from a trail"
      parameters:
        - $ref: "#/components/parameters/TrailId"
        - $ref: "#/components/parameters/FeaturesId"
      responses:
        "200":
          description: "Successfully deleted a feature from a trail"


        

